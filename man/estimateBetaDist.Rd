% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimateBetaDist.R
\name{estimateBetaDist}
\alias{estimateBetaDist}
\title{Select the beta distribution that fit specified quantiles}
\usage{
estimateBetaDist(
  q,
  init.pars = NULL,
  via.optim = TRUE,
  loss.fun = c("linear", "huber", "smooth", "cauchy", "arctg"),
  maxiter = 1024,
  maxfev = 1e+05,
  ftol = 1e-12,
  ptol = 1e-12
)
}
\arguments{
\item{q}{prior probabilities}

\item{init.pars}{initial parameter values. Defaults is NULL and an initial
guess is estimated using the method of moments, which probably is the best
approach to estimate the initial parameter values of beta distribution.}

\item{via.optim}{Logical. Whether to estimate beta distribution parameters
via \code{\link[stats]{optim}} or \code{\link[minpack.lm]{nls.lm}}. If any of
this approaches fail then parameters used \emph{init.pars} will be returned.}

\item{loss.fun}{Loss function(s) used in the regression (see
\href{https://en.wikipedia.org/wiki/Loss_function}{(Loss function)}). This
fitting uses the approach followed in in the R package
\href{https://github.com/genomaths/usefr}{usefr}. After
\eqn{z =  1/2 * sum((f(x) - y)^2)} we have:
\enumerate{
\item "linear": linear function which gives a standard least squares:
\eqn{loss(z) = z}.
\item "huber": Huber loss,
\eqn{loss(z) = ifelse(z \leq 1, z, sqrt(z) -1)}.
\item "smooth": Smooth approximation to the sum of residues absolute
values: \eqn{loss(z) = 2*(sqrt(z + 1) - 1)}.
\item "cauchy": Cauchy loss: \eqn{loss(z) = log(z + 1)}.
\item "arctg": arc-tangent loss function: \eqn{loss(x) = atan(z)}.
}}

\item{maxiter, ftol, ptol, maxfev}{Optional parameters for
\code{\link[minpack.lm]{nlsLM}} and \code{\link[minpack.lm]{nls.lm}}
functions.}
}
\value{
the estimated values of the shape parameters of the selected beta
distribution.
}
\description{
This function perform a nonlinear estimation of the shape
parameters of beta distribution
}
\details{
To obtain the estimates for shape parameters from the best fitted
beta distribution model, a nonlinear regression Levenberg-Marquardt algorithm
implemented in function \code{\link[minpack.lm]{nls.lm}} is applied. Several
\href{https://en.wikipedia.org/wiki/Loss_function}{(loss functions)}) are
available to accomplish the model fitting to the data. If
\code{\link[minpack.lm]{nls.lm}} function fails, then a new try will be
accomplish with \code{\link[minpack.lm]{nlsLM}} function. If the previous
algorithms fail, then the parameters will be estimated using BFGS" algorithm
implemented in \code{\link[stats]{optim}} function.
}
\examples{
## ------ A simple example -----
set.seed(4)
br <- rbeta(1e3, shape1 = 1, shape2 = 2)
pars <- estimateBetaDist(br)
pars

}
