% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getDMPatRegions.R
\name{getDMPatRegions}
\alias{getDMPatRegions}
\alias{getDMPatRegions.default}
\alias{getDMPatRegions.GRanges}
\alias{getDMPatRegions.pDMP}
\alias{getDMPatRegions.InfDiv}
\alias{getDMPatRegions.list}
\title{Count DMPs at Genomic Regions}
\usage{
getDMPatRegions(
  GR,
  regions,
  only.hypo = FALSE,
  only.hyper = FALSE,
  type = "within",
  ignore.strand = TRUE,
  gene_id_col = NULL,
  gene_name_col = NULL,
  ...
)

\method{getDMPatRegions}{default}(
  GR,
  regions,
  only.hypo = FALSE,
  only.hyper = FALSE,
  type = "within",
  ignore.strand = TRUE,
  gene_id_col = NULL,
  gene_name_col = NULL,
  ...
)

\method{getDMPatRegions}{GRanges}(
  GR,
  regions,
  only.hypo = FALSE,
  only.hyper = FALSE,
  type = "within",
  ignore.strand = TRUE,
  gene_id_col = NULL,
  gene_name_col = NULL,
  ...
)

\method{getDMPatRegions}{pDMP}(
  GR,
  regions,
  only.hypo = FALSE,
  only.hyper = FALSE,
  type = "within",
  ignore.strand = TRUE,
  gene_id_col = NULL,
  gene_name_col = NULL,
  ...
)

\method{getDMPatRegions}{InfDiv}(
  GR,
  regions,
  only.hypo = FALSE,
  only.hyper = FALSE,
  type = "within",
  ignore.strand = TRUE,
  gene_id_col = NULL,
  gene_name_col = NULL,
  ...
)

\method{getDMPatRegions}{list}(
  GR,
  regions,
  only.hypo = FALSE,
  only.hyper = FALSE,
  type = "within",
  ignore.strand = TRUE,
  gene_id_col = NULL,
  gene_name_col = NULL,
  ...
)
}
\arguments{
\item{GR}{An objects object from the any of the classes: 'pDMP', 'InfDiv',
GRangesList, GRanges or a list of GRanges.}

\item{regions}{A GRanges object with gene coordinates and gene IDs. A
meta-column named 'gene_id' carying the gene ids should be included. If
the meta-column named 'gene_id' is not provided, then gene (region) ids
will be created using the gene (region) coordinates.}

\item{only.hypo, only.hyper}{logical(1). Whether to select only
hypo-methylated or hyper-methylated cytosine sites.}

\item{ignore.strand, type}{Same as for
\code{\link[GenomicRanges]{findOverlaps-methods}}}

\item{...}{optional arguments for
\code{\link[GenomicRanges]{findOverlaps-methods}}. Users must evaluate
whether specific setting makes sense on each particular context.}
}
\value{
A GRanges object
}
\description{
The function counts DMPs overlapping with genomic regions.
In fact, this function operates as \code{\link{getDIMPatGenes}} function,
but without the restrictions set for GRanges objects derived from MethylIT
pipeline.
}
\examples{
## Gene annotation
genes <- GRanges(seqnames = '1',
                ranges = IRanges(start = c(3631, 6788, 11649),
                end = c(5899, 9130, 13714)),
                strand = c('+', '-', '-'))
mcols(genes) <- data.frame(gene_id = c('AT1G01010', 'AT1G01020',
                                        'AT1G01030'))

## Get a dataset of dmps from the package
data(dmps)

## Finally DMPs found on genes
dmrs <- getDMPatRegions(GR = dmps, regions = genes)

}
\seealso{
\code{\link{getDIMPatGenes}}
}
